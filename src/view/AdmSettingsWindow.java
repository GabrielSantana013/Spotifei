/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import controller.AdmSettingsController;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import javax.imageio.ImageIO;

import view.customClasses.RoundedButton;
import view.customClasses.PlaceholderFields;
import view.customClasses.RoundedButton.*;
import view.customClasses.RoundedPanel;
import javax.swing.plaf.basic.BasicScrollBarUI;

import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.*;
import java.awt.*;
import java.text.NumberFormat;
import javax.swing.text.NumberFormatter;
import model.Adm;

import static utils.ImageProcessor.processImage;

/**
 *
 * @author Pedro Schneider, Gabriel Santana Dias
 */
public class AdmSettingsWindow extends javax.swing.JFrame {
    
    Toolkit toolkit = Toolkit.getDefaultToolkit();
    private final Dimension screenSize = toolkit.getScreenSize();
    private final int width = screenSize.width;
    private final int height = screenSize.height;
    private Adm adm;
    
    /**
     * Creates new form HomeWindow
     */
    public AdmSettingsWindow(Adm adm) {
        initComponents();
        c =  new AdmSettingsController(this, adm);
        this.adm = adm;
        c.setUserNameOnWindow();
        
        this.setSize(width, height);
        
        // changes window icon
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/view/assets/images/logoSpotifei.png")).getImage());
        
        // center the window

        int x = (screenSize.width - width) / 2;
        int y = (screenSize.height - height) / 2;
        
        this.setLocation(new Point(x,y));
    }
    
    public JButton getBtt_profile() {
        return btt_profile;
    }

    public void setBtt_profile(JButton btt_profile) {
        this.btt_profile = btt_profile;
    }

    public JPanel getPnl_registerUser() {
        return pnl_registerArtist;
    }

    public JPanel getPnl_registerMusic() {
        return pnl_registerMusic;
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        home_pnl_all = new javax.swing.JPanel();
        home_pnl_leftSide = new javax.swing.JPanel();
        home_pnl_titleLogo = new javax.swing.JPanel();
        icon_logo = new javax.swing.JLabel();
        lbl_title = new javax.swing.JLabel();
        home_pnl_options = new javax.swing.JPanel();
        home_pnl_homeOpt = new javax.swing.JPanel();
        icon_home = new javax.swing.JLabel();
        lbl_home = new javax.swing.JLabel();
        home_pnl_configsOpt = new javax.swing.JPanel();
        icon_config = new javax.swing.JLabel();
        lbl_config = new javax.swing.JLabel();
        home_pnl_topSide = new javax.swing.JPanel();
        home_pnl_botSide = new javax.swing.JPanel();
        home_pnl_inside = new javax.swing.JPanel();
        btt_profile = new RoundedButton("user_name");
        btt_registerUser = new RoundedButton("Cadastrar novo usuário");
        btt_registerArtist = new RoundedButton("Cadastrar novo artista");
        btt_registerMusic = new RoundedButton("Cadastrar nova música");
        pnl_registers = new javax.swing.JPanel();
        pnl_registerArtist = new RoundedPanel();
        txt_name = new PlaceholderFields("Digite o nome do artista...", new Insets(0, 15, 0, 0));
        javax.swing.text.MaskFormatter dateFormatter = null;
        try {
            dateFormatter = new javax.swing.text.MaskFormatter("##/##/####");
            dateFormatter.setPlaceholderCharacter('_');
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_birthDate = new PlaceholderFields(dateFormatter, "01/01/2000", new Insets(0, 15, 0, 0));
        cbox_gender = new javax.swing.JComboBox<>();
        scroll_desc = new javax.swing.JScrollPane();
        txt_description = new javax.swing.JTextArea();
        lbl_desc = new javax.swing.JLabel();
        pnl_registerMusic = new RoundedPanel();
        txt_title = new PlaceholderFields("Digite o título da música...", new Insets(0, 15, 0, 0));
        txt_genre = new PlaceholderFields("Digite o gênero da música...", new Insets(0, 15, 0, 0));
        lbl_musicArtist = new javax.swing.JLabel();
        scroll_musicArtists = new javax.swing.JScrollPane();
        list_artists = new javax.swing.JList<>();
        scroll_musicDesc = new javax.swing.JScrollPane();
        txt_musicDescription = new javax.swing.JTextArea();
        lbl_musicDesc = new javax.swing.JLabel();
        txt_duration = new PlaceholderFields("Duração da música (s)", new Insets(0, 15, 0, 0));
        NumberFormat intFormat = NumberFormat.getIntegerInstance();
        intFormat.setGroupingUsed(false); // tira separação por , e .

        NumberFormatter formatter = new NumberFormatter(intFormat);
        formatter.setMinimum(0); // so numeros positivos
        txt_likes = new PlaceholderFields(formatter, "0", new Insets(0, 5, 0, 0));
        txt_dislikes = new PlaceholderFields(formatter, "0", new Insets(0, 5, 0, 0));
        lbl_likes = new javax.swing.JLabel();
        lbl_dislikes = new javax.swing.JLabel();
        btt_addPhoto = new RoundedButton("Adicionar foto");
        btt_addAudio = new RoundedButton("Adicionar áudio");
        btt_cadastrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spotifei");
        setResizable(false);

        home_pnl_all.setBackground(new java.awt.Color(28, 28, 28));
        home_pnl_all.setMaximumSize(new java.awt.Dimension(1024, 1024));
        home_pnl_all.setMinimumSize(new java.awt.Dimension(1024, 1024));
        home_pnl_all.setPreferredSize(new java.awt.Dimension(1024, 1024));

        home_pnl_leftSide.setBackground(new java.awt.Color(28, 28, 28));

        home_pnl_titleLogo.setBackground(new java.awt.Color(28, 28, 28));

        icon_logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/assets/images/logoSpotifei.png"))); // NOI18N
        icon_logo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lbl_title.setFont(new Font("Gotham Black", Font.PLAIN, 24));
        lbl_title.setForeground(new java.awt.Color(30, 215, 96));
        lbl_title.setText("Spotifei");

        javax.swing.GroupLayout home_pnl_titleLogoLayout = new javax.swing.GroupLayout(home_pnl_titleLogo);
        home_pnl_titleLogo.setLayout(home_pnl_titleLogoLayout);
        home_pnl_titleLogoLayout.setHorizontalGroup(
            home_pnl_titleLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_pnl_titleLogoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(icon_logo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_title)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        home_pnl_titleLogoLayout.setVerticalGroup(
            home_pnl_titleLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_pnl_titleLogoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(home_pnl_titleLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(icon_logo)
                    .addGroup(home_pnl_titleLogoLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lbl_title)))
                .addContainerGap())
        );

        home_pnl_options.setBackground(new java.awt.Color(28, 28, 28));
        home_pnl_options.setPreferredSize(new java.awt.Dimension(0, 348));
        home_pnl_options.setLayout(new javax.swing.BoxLayout(home_pnl_options, javax.swing.BoxLayout.Y_AXIS));

        home_pnl_homeOpt.setBackground(new java.awt.Color(28, 28, 28));
        home_pnl_homeOpt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        home_pnl_homeOpt.setPreferredSize(new java.awt.Dimension(65, 58));
        home_pnl_homeOpt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home_pnl_homeOptMouseClicked(evt);
            }
        });

        icon_home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/assets/images/homeIcon.png"))); // NOI18N
        home_pnl_homeOpt.add(icon_home);

        lbl_home.setFont(new Font("Gotham Black", Font.PLAIN, 16));
        lbl_home.setForeground(new java.awt.Color(168, 170, 170));
        lbl_home.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_home.setText("Home");
        home_pnl_homeOpt.add(lbl_home);

        home_pnl_options.add(home_pnl_homeOpt);

        home_pnl_configsOpt.setBackground(new java.awt.Color(28, 28, 28));
        home_pnl_configsOpt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        home_pnl_configsOpt.setPreferredSize(new java.awt.Dimension(65, 58));
        home_pnl_configsOpt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                home_pnl_configsOptMouseClicked(evt);
            }
        });

        icon_config.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/assets/images/configIcon.png"))); // NOI18N
        home_pnl_configsOpt.add(icon_config);

        lbl_config.setFont(new Font("Gotham Black", Font.PLAIN, 16));
        lbl_config.setForeground(new java.awt.Color(168, 170, 170));
        lbl_config.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_config.setText("Gerenciar");
        home_pnl_configsOpt.add(lbl_config);

        home_pnl_options.add(home_pnl_configsOpt);

        javax.swing.GroupLayout home_pnl_leftSideLayout = new javax.swing.GroupLayout(home_pnl_leftSide);
        home_pnl_leftSide.setLayout(home_pnl_leftSideLayout);
        home_pnl_leftSideLayout.setHorizontalGroup(
            home_pnl_leftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_pnl_leftSideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(home_pnl_leftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(home_pnl_options, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(home_pnl_titleLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        home_pnl_leftSideLayout.setVerticalGroup(
            home_pnl_leftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_pnl_leftSideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(home_pnl_titleLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(home_pnl_options, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(512, Short.MAX_VALUE))
        );

        home_pnl_topSide.setBackground(new java.awt.Color(28, 28, 28));

        javax.swing.GroupLayout home_pnl_topSideLayout = new javax.swing.GroupLayout(home_pnl_topSide);
        home_pnl_topSide.setLayout(home_pnl_topSideLayout);
        home_pnl_topSideLayout.setHorizontalGroup(
            home_pnl_topSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        home_pnl_topSideLayout.setVerticalGroup(
            home_pnl_topSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        home_pnl_botSide.setBackground(new java.awt.Color(28, 28, 28));

        javax.swing.GroupLayout home_pnl_botSideLayout = new javax.swing.GroupLayout(home_pnl_botSide);
        home_pnl_botSide.setLayout(home_pnl_botSideLayout);
        home_pnl_botSideLayout.setHorizontalGroup(
            home_pnl_botSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        home_pnl_botSideLayout.setVerticalGroup(
            home_pnl_botSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );

        home_pnl_inside.setBackground(new java.awt.Color(18, 18, 18));

        ((RoundedButton) btt_profile).setTextAlignment(TextAlign.LEFT);
        btt_profile.setBackground(new java.awt.Color(185, 192, 198));
        btt_profile.setFont(new java.awt.Font("Gotham", Font.PLAIN, 12));
        btt_profile.setForeground(new java.awt.Color(28, 28, 28));
        btt_profile.setText("user_name");
        btt_profile.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 28, 28), 1, true));
        btt_profile.setBorderPainted(false);
        btt_profile.setPreferredSize(new Dimension(200,30));
        btt_profile.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btt_profile.setPreferredSize(new java.awt.Dimension(48, 20));
        ((RoundedButton) btt_profile).setCornerRadiusVertical(80);
        ((RoundedButton) btt_profile).setCornerRadiusHorizontal(40);
        btt_profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_profileActionPerformed(evt);
            }
        });

        ((RoundedButton) btt_registerUser).setTextAlignment(TextAlign.LEFT);
        btt_registerUser.setBackground(new java.awt.Color(185, 192, 198));
        btt_registerUser.setFont(new java.awt.Font("Gotham Black", Font.PLAIN, 12));
        btt_registerUser.setForeground(new java.awt.Color(28, 28, 28));
        btt_registerUser.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 28, 28), 1, true));
        btt_registerUser.setBorderPainted(false);
        btt_registerUser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btt_registerUser.setPreferredSize(new java.awt.Dimension(48, 20));
        ((RoundedButton) btt_registerUser).setCornerRadiusVertical(80);
        ((RoundedButton) btt_registerUser).setCornerRadiusHorizontal(40);
        btt_registerUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_registerUserActionPerformed(evt);
            }
        });

        ((RoundedButton) btt_registerArtist).setTextAlignment(TextAlign.LEFT);
        btt_registerArtist.setBackground(new java.awt.Color(185, 192, 198));
        btt_registerArtist.setFont(new java.awt.Font("Gotham Black", Font.PLAIN, 12));
        btt_registerArtist.setForeground(new java.awt.Color(28, 28, 28));
        btt_registerArtist.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 28, 28), 1, true));
        btt_registerArtist.setBorderPainted(false);
        btt_registerArtist.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btt_registerArtist.setPreferredSize(new java.awt.Dimension(48, 20));
        ((RoundedButton) btt_registerArtist).setCornerRadiusVertical(80);
        ((RoundedButton) btt_registerArtist).setCornerRadiusHorizontal(40);
        btt_registerArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_registerArtistActionPerformed(evt);
            }
        });

        ((RoundedButton) btt_registerMusic).setTextAlignment(TextAlign.LEFT);
        btt_registerMusic.setBackground(new java.awt.Color(185, 192, 198));
        btt_registerMusic.setFont(new java.awt.Font("Gotham Black", Font.PLAIN, 12));
        btt_registerMusic.setForeground(new java.awt.Color(28, 28, 28));
        btt_registerMusic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 28, 28), 1, true));
        btt_registerMusic.setBorderPainted(false);
        btt_registerMusic.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btt_registerMusic.setPreferredSize(new java.awt.Dimension(48, 20));
        ((RoundedButton) btt_registerMusic).setCornerRadiusVertical(80);
        ((RoundedButton) btt_registerMusic).setCornerRadiusHorizontal(40);
        btt_registerMusic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_registerMusicActionPerformed(evt);
            }
        });

        pnl_registers.setOpaque(false);
        pnl_registers.setLayout(new javax.swing.OverlayLayout(pnl_registers));

        ((RoundedPanel) pnl_registerArtist).setHover(0);
        pnl_registerArtist.setBackground(new java.awt.Color(38, 38, 38));
        pnl_registerArtist.setVisible(false);

        txt_name.setBackground(new java.awt.Color(51, 51, 51));
        txt_name.setFont(new java.awt.Font("Gotham Thin", 1, 14));
        txt_name.setForeground(new java.awt.Color(168, 170, 170));
        txt_name.setBorder(null);
        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });

        txt_birthDate.setBackground(new java.awt.Color(51, 51, 51));
        txt_birthDate.setBorder(null);
        txt_birthDate.setForeground(new java.awt.Color(168, 168, 168));
        txt_birthDate.setFont(new java.awt.Font("Gotham Thin", 1, 14));

        cbox_gender.setBackground(new java.awt.Color(51, 51, 51));
        cbox_gender.setFont(new java.awt.Font("Gotham Thin", 1, 14));
        cbox_gender.setForeground(new java.awt.Color(168, 170, 170));
        cbox_gender.setMaximumRowCount(3);
        cbox_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Feminino", "Outro" }));
        cbox_gender.setToolTipText("");
        cbox_gender.setBorder(null);
        cbox_gender.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        scroll_desc.setBorder(null);

        txt_description.setBackground(new java.awt.Color(51, 51, 51));
        txt_description.setColumns(20);
        txt_description.setFont(new java.awt.Font("Gotham Thin", 1, 14));
        txt_description.setForeground(new java.awt.Color(168, 168, 168));
        txt_description.setLineWrap(true);
        txt_description.setRows(5);
        txt_description.setWrapStyleWord(true);
        txt_description.setAutoscrolls(false);
        txt_description.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        txt_description.setDisabledTextColor(new java.awt.Color(236, 239, 241));
        txt_description.setMaximumSize(new java.awt.Dimension(212, 214));
        scroll_desc.setViewportView(txt_description);

        scroll_desc.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(60,63,65);
                this.trackColor = new Color(24,24,24);
            }

            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton button = new JButton();
                button.setPreferredSize(new Dimension(0, 0));
                button.setMinimumSize(new Dimension(0, 0));
                button.setMaximumSize(new Dimension(0, 0));
                return button;
            }

            // barra de scroll mais larga
            @Override
            public Dimension getPreferredSize(JComponent c) {
                return new Dimension(8, super.getPreferredSize(c).height);
            }

            // arredonda o botão
            @Override
            protected void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g2.translate(thumbBounds.x, thumbBounds.y);
                g2.setColor(thumbColor);
                int arc = 12;
                g2.fillRoundRect(0, 0, thumbBounds.width, thumbBounds.height, arc, arc);
                g2.dispose();
            }

            @Override
            protected void paintTrack(Graphics g, JComponent c, Rectangle trackBounds) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setColor(trackColor);
                g2.fillRect(trackBounds.x, trackBounds.y, trackBounds.width, trackBounds.height);
                g2.dispose();
            }
        });

        lbl_desc.setFont(new Font("Gotham Light", Font.PLAIN, 14));
        lbl_desc.setForeground(new java.awt.Color(236, 239, 241));
        lbl_desc.setText("Descrição do artista:");

        javax.swing.GroupLayout pnl_registerArtistLayout = new javax.swing.GroupLayout(pnl_registerArtist);
        pnl_registerArtist.setLayout(pnl_registerArtistLayout);
        pnl_registerArtistLayout.setHorizontalGroup(
            pnl_registerArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_registerArtistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_registerArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_birthDate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_name)
                    .addComponent(cbox_gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scroll_desc)
                    .addComponent(lbl_desc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnl_registerArtistLayout.setVerticalGroup(
            pnl_registerArtistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_registerArtistLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_birthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbox_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_desc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll_desc, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_registers.add(pnl_registerArtist);

        ((RoundedPanel) pnl_registerMusic).setHover(0);
        pnl_registerMusic.setBackground(new java.awt.Color(38, 38, 38));
        pnl_registerMusic.setVisible(false);

        txt_title.setBackground(new java.awt.Color(51, 51, 51));
        txt_title.setFont(new java.awt.Font("Gotham Thin", 1, 14));
        txt_title.setForeground(new java.awt.Color(168, 170, 170));
        txt_title.setBorder(null);
        txt_title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_titleActionPerformed(evt);
            }
        });

        txt_genre.setBackground(new java.awt.Color(51, 51, 51));
        txt_genre.setFont(new java.awt.Font("Gotham Thin", 1, 14));
        txt_genre.setForeground(new java.awt.Color(168, 170, 170));
        txt_genre.setBorder(null);
        txt_genre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_genreActionPerformed(evt);
            }
        });

        lbl_musicArtist.setFont(new Font("Gotham Light", Font.PLAIN, 14));
        lbl_musicArtist.setForeground(new java.awt.Color(236, 239, 241));
        lbl_musicArtist.setText("Selecione o artista da música:");

        scroll_musicArtists.setBackground(new java.awt.Color(60, 63, 65));
        scroll_musicArtists.setBorder(null);
        scroll_musicArtists.setForeground(new java.awt.Color(58, 58, 58));
        scroll_musicArtists.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scroll_musicArtists.setMaximumSize(new java.awt.Dimension(322, 322));
        scroll_musicArtists.setMinimumSize(new java.awt.Dimension(322, 322));
        scroll_musicArtists.setPreferredSize(new java.awt.Dimension(322, 322));
        scroll_musicArtists.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(60,63,65);
                this.trackColor = new Color(24,24,24);
            }

            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton button = new JButton();
                button.setPreferredSize(new Dimension(0, 0));
                button.setMinimumSize(new Dimension(0, 0));
                button.setMaximumSize(new Dimension(0, 0));
                return button;
            }

            // barra de scroll mais larga
            @Override
            public Dimension getPreferredSize(JComponent c) {
                return new Dimension(8, super.getPreferredSize(c).height);
            }

            // arredonda o botão
            @Override
            protected void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g2.translate(thumbBounds.x, thumbBounds.y);
                g2.setColor(thumbColor);
                int arc = 12;
                g2.fillRoundRect(0, 0, thumbBounds.width, thumbBounds.height, arc, arc);
                g2.dispose();
            }

            @Override
            protected void paintTrack(Graphics g, JComponent c, Rectangle trackBounds) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setColor(trackColor);
                g2.fillRect(trackBounds.x, trackBounds.y, trackBounds.width, trackBounds.height);
                g2.dispose();
            }
        });

        list_artists.setBackground(new java.awt.Color(51, 51, 51));
        list_artists.setBorder(null);
        list_artists.setFont(new Font("Gotham Light", Font.PLAIN, 14));
        list_artists.setForeground(new java.awt.Color(236, 239, 241));
        list_artists.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Artista 1", "Artista 2", "Artista 3", "Artista 4", "Artista 5", "Artista 6", "Artista 7", "Artista 8", "Artista 9", "Artista 10", "Artista 11" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        list_artists.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        list_artists.setSelectionBackground(new java.awt.Color(100, 165, 135));
        scroll_musicArtists.setViewportView(list_artists);

        scroll_musicDesc.setBorder(null);

        txt_musicDescription.setBackground(new java.awt.Color(51, 51, 51));
        txt_musicDescription.setColumns(20);
        txt_musicDescription.setFont(new java.awt.Font("Gotham Thin", 1, 14));
        txt_musicDescription.setForeground(new java.awt.Color(168, 168, 168));
        txt_musicDescription.setLineWrap(true);
        txt_musicDescription.setRows(5);
        txt_musicDescription.setWrapStyleWord(true);
        txt_musicDescription.setAutoscrolls(false);
        txt_musicDescription.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        txt_musicDescription.setDisabledTextColor(new java.awt.Color(236, 239, 241));
        txt_musicDescription.setMaximumSize(new java.awt.Dimension(212, 214));
        scroll_musicDesc.setViewportView(txt_musicDescription);

        scroll_musicDesc.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(60,63,65);
                this.trackColor = new Color(24,24,24);
            }

            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton button = new JButton();
                button.setPreferredSize(new Dimension(0, 0));
                button.setMinimumSize(new Dimension(0, 0));
                button.setMaximumSize(new Dimension(0, 0));
                return button;
            }

            // barra de scroll mais larga
            @Override
            public Dimension getPreferredSize(JComponent c) {
                return new Dimension(8, super.getPreferredSize(c).height);
            }

            // arredonda o botão
            @Override
            protected void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g2.translate(thumbBounds.x, thumbBounds.y);
                g2.setColor(thumbColor);
                int arc = 12;
                g2.fillRoundRect(0, 0, thumbBounds.width, thumbBounds.height, arc, arc);
                g2.dispose();
            }

            @Override
            protected void paintTrack(Graphics g, JComponent c, Rectangle trackBounds) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setColor(trackColor);
                g2.fillRect(trackBounds.x, trackBounds.y, trackBounds.width, trackBounds.height);
                g2.dispose();
            }
        });

        lbl_musicDesc.setFont(new Font("Gotham Light", Font.PLAIN, 14));
        lbl_musicDesc.setForeground(new java.awt.Color(236, 239, 241));
        lbl_musicDesc.setText("Descrição da música:");

        txt_duration.setBackground(new java.awt.Color(51, 51, 51));
        txt_duration.setFont(new java.awt.Font("Gotham Thin", 1, 14));
        txt_duration.setForeground(new java.awt.Color(168, 170, 170));
        txt_duration.setBorder(null);
        txt_duration.setEnabled(false);
        txt_duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_durationActionPerformed(evt);
            }
        });

        txt_likes.setBackground(new java.awt.Color(51, 51, 51));
        txt_likes.setBorder(null);
        txt_likes.setForeground(new java.awt.Color(236, 239, 241));
        txt_likes.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(formatter));
        txt_likes.setText("0");
        txt_likes.setFont(new Font("Gotham Light", Font.PLAIN, 14));

        txt_dislikes.setBackground(new java.awt.Color(51, 51, 51));
        txt_dislikes.setBorder(null);
        txt_dislikes.setForeground(new java.awt.Color(236, 239, 241));
        txt_dislikes.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(formatter));
        txt_dislikes.setText("0");
        txt_dislikes.setFont(new Font("Gotham Light", Font.PLAIN, 14));

        lbl_likes.setFont(new Font("Gotham Light", Font.PLAIN, 14));
        lbl_likes.setForeground(new java.awt.Color(236, 239, 241));
        lbl_likes.setText("N° Likes");
        lbl_likes.setEnabled(false);

        lbl_dislikes.setFont(new Font("Gotham Light", Font.PLAIN, 14));
        lbl_dislikes.setForeground(new java.awt.Color(236, 239, 241));
        lbl_dislikes.setText("N° Dislikes");
        lbl_dislikes.setEnabled(false);

        btt_addPhoto.setBackground(new java.awt.Color(51, 51, 51));
        btt_addPhoto.setFont(new java.awt.Font("Gotham Black", Font.PLAIN, 10));
        btt_addPhoto.setForeground(new java.awt.Color(168, 170, 170));
        btt_addPhoto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 28, 28), 1, true));
        btt_addPhoto.setBorderPainted(false);
        btt_addPhoto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btt_addPhoto.setPreferredSize(new java.awt.Dimension(48, 20));
        ((RoundedButton) btt_addPhoto).setNormalColor(new Color(51,51,51));
        ((RoundedButton) btt_addPhoto).setHoverColor(new Color(71,71,71));
        ((RoundedButton) btt_addPhoto).setCornerRadiusVertical(15);
        ((RoundedButton) btt_addPhoto).setCornerRadiusHorizontal(15);
        btt_addPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_addPhotoActionPerformed(evt);
            }
        });

        btt_addAudio.setBackground(new java.awt.Color(51, 51, 51));
        btt_addAudio.setFont(new java.awt.Font("Gotham Black", Font.PLAIN, 10));
        btt_addAudio.setForeground(new java.awt.Color(168, 170, 170));
        btt_addAudio.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(28, 28, 28), 1, true));
        btt_addAudio.setBorderPainted(false);
        btt_addAudio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btt_addAudio.setPreferredSize(new java.awt.Dimension(48, 20));
        ((RoundedButton) btt_addAudio).setNormalColor(new Color(51,51,51));
        ((RoundedButton) btt_addAudio).setHoverColor(new Color(71,71,71));
        ((RoundedButton) btt_addAudio).setCornerRadiusVertical(15);
        ((RoundedButton) btt_addAudio).setCornerRadiusHorizontal(15);
        btt_addAudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_addAudioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_registerMusicLayout = new javax.swing.GroupLayout(pnl_registerMusic);
        pnl_registerMusic.setLayout(pnl_registerMusicLayout);
        pnl_registerMusicLayout.setHorizontalGroup(
            pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_registerMusicLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll_musicArtists, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txt_title)
                    .addComponent(scroll_musicDesc)
                    .addComponent(lbl_musicDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_genre)
                    .addComponent(lbl_musicArtist, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_duration, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnl_registerMusicLayout.createSequentialGroup()
                        .addGroup(pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lbl_likes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_likes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(btt_addPhoto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btt_addAudio, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(txt_dislikes)
                            .addComponent(lbl_dislikes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnl_registerMusicLayout.setVerticalGroup(
            pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_registerMusicLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_title, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_genre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_musicArtist)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll_musicArtists, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_musicDesc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll_musicDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txt_duration, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_dislikes)
                    .addComponent(lbl_likes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_likes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_dislikes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_registerMusicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btt_addPhoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btt_addAudio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_registers.add(pnl_registerMusic);

        btt_cadastrar.setText("Cadastrar");

        javax.swing.GroupLayout home_pnl_insideLayout = new javax.swing.GroupLayout(home_pnl_inside);
        home_pnl_inside.setLayout(home_pnl_insideLayout);
        home_pnl_insideLayout.setHorizontalGroup(
            home_pnl_insideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_pnl_insideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(home_pnl_insideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btt_registerUser, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(btt_registerArtist, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(btt_registerMusic, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(pnl_registers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(home_pnl_insideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(home_pnl_insideLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                        .addComponent(btt_profile, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(home_pnl_insideLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(btt_cadastrar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        home_pnl_insideLayout.setVerticalGroup(
            home_pnl_insideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_pnl_insideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(home_pnl_insideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_registers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(home_pnl_insideLayout.createSequentialGroup()
                        .addGroup(home_pnl_insideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btt_profile, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btt_registerUser, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(home_pnl_insideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(home_pnl_insideLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btt_registerArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btt_registerMusic, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(home_pnl_insideLayout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(btt_cadastrar)))))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout home_pnl_allLayout = new javax.swing.GroupLayout(home_pnl_all);
        home_pnl_all.setLayout(home_pnl_allLayout);
        home_pnl_allLayout.setHorizontalGroup(
            home_pnl_allLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(home_pnl_botSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(home_pnl_allLayout.createSequentialGroup()
                .addComponent(home_pnl_leftSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(home_pnl_allLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(home_pnl_inside, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(home_pnl_topSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        home_pnl_allLayout.setVerticalGroup(
            home_pnl_allLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_pnl_allLayout.createSequentialGroup()
                .addGroup(home_pnl_allLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(home_pnl_allLayout.createSequentialGroup()
                        .addComponent(home_pnl_topSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(home_pnl_inside, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(home_pnl_leftSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(home_pnl_botSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(home_pnl_all, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(home_pnl_all, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btt_profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_profileActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btt_profileActionPerformed

    private void home_pnl_homeOptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_pnl_homeOptMouseClicked
        // TODO add your handling code here:
        AdmHomeWindow ahw = null;
        try {
            ahw = new AdmHomeWindow(this.adm);
        } catch (IOException e) {
            e.printStackTrace();
        }
        ahw.setVisible(rootPaneCheckingEnabled);
        this.setVisible(false);
    }//GEN-LAST:event_home_pnl_homeOptMouseClicked

    private void home_pnl_configsOptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_pnl_configsOptMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_home_pnl_configsOptMouseClicked

    private void btt_registerUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_registerUserActionPerformed
        // TODO add your handling code here:
        c.registerUser();
    }//GEN-LAST:event_btt_registerUserActionPerformed

    private void btt_registerArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_registerArtistActionPerformed
        // TODO add your handling code here:
        c.registerArtist();
    }//GEN-LAST:event_btt_registerArtistActionPerformed

    private void btt_registerMusicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_registerMusicActionPerformed
        // TODO add your handling code here:
        c.registerMusic();
    }//GEN-LAST:event_btt_registerMusicActionPerformed

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void txt_titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_titleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_titleActionPerformed

    private void txt_genreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_genreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_genreActionPerformed

    private void btt_addPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_addPhotoActionPerformed
        // TODO add your handling code here:
        c.addPhoto();     
    }//GEN-LAST:event_btt_addPhotoActionPerformed

    private void btt_addAudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_addAudioActionPerformed
        c.addAudio();
    }//GEN-LAST:event_btt_addAudioActionPerformed

    private void txt_durationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_durationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_durationActionPerformed

    public JButton getBtt_cadastrar() {
        return btt_cadastrar;
    }

    public void setBtt_cadastrar(JButton btt_cadastrar) {
        this.btt_cadastrar = btt_cadastrar;
    }

    public JFormattedTextField getTxt_birthDate() {
        return txt_birthDate;
    }

    public void setTxt_birthDate(JFormattedTextField txt_birthDate) {
        this.txt_birthDate = txt_birthDate;
    }

    public JTextArea getTxt_description() {
        return txt_description;
    }

    public void setTxt_description(JTextArea txt_description) {
        this.txt_description = txt_description;
    }

    public JFormattedTextField getTxt_dislikes() {
        return txt_dislikes;
    }

    public void setTxt_dislikes(JFormattedTextField txt_dislikes) {
        this.txt_dislikes = txt_dislikes;
    }

    public JTextField getTxt_duration() {
        return txt_duration;
    }

    public void setTxt_duration(JTextField txt_duration) {
        this.txt_duration = txt_duration;
    }

    public JTextField getTxt_genre() {
        return txt_genre;
    }

    public void setTxt_genre(JTextField txt_genre) {
        this.txt_genre = txt_genre;
    }

    public JFormattedTextField getTxt_likes() {
        return txt_likes;
    }

    public void setTxt_likes(JFormattedTextField txt_likes) {
        this.txt_likes = txt_likes;
    }

    public JTextArea getTxt_musicDescription() {
        return txt_musicDescription;
    }

    public void setTxt_musicDescription(JTextArea txt_musicDescription) {
        this.txt_musicDescription = txt_musicDescription;
    }

    public JTextField getTxt_name() {
        return txt_name;
    }

    public void setTxt_name(JTextField txt_name) {
        this.txt_name = txt_name;
    }

    public JTextField getTxt_title() {
        return txt_title;
    }

    public void setTxt_title(JTextField txt_title) {
        this.txt_title = txt_title;
    }

    public JComboBox<String> getCbox_gender() {
        return cbox_gender;
    }

    public void setCbox_gender(JComboBox<String> cbox_gender) {
        this.cbox_gender = cbox_gender;
    }

    public JButton getBtt_addAudio() {
        return btt_addAudio;
    }

    public void setBtt_addAudio(JButton btt_addAudio) {
        this.btt_addAudio = btt_addAudio;
    }

    public JButton getBtt_addPhoto() {
        return btt_addPhoto;
    }

    public void setBtt_addPhoto(JButton btt_addPhoto) {
        this.btt_addPhoto = btt_addPhoto;
    }

    public JList<String> getList_artists() {
        return list_artists;
    }

    public void setList_artists(JList<String> list_artists) {
        this.list_artists = list_artists;
    }
  
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(HomeWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new HomeWindow().setVisible(true);
//            }
//        });
//    }
    
    private AdmSettingsController c;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btt_addAudio;
    private javax.swing.JButton btt_addPhoto;
    private javax.swing.JButton btt_cadastrar;
    private javax.swing.JButton btt_profile;
    private javax.swing.JButton btt_registerArtist;
    private javax.swing.JButton btt_registerMusic;
    private javax.swing.JButton btt_registerUser;
    private javax.swing.JComboBox<String> cbox_gender;
    private javax.swing.JPanel home_pnl_all;
    private javax.swing.JPanel home_pnl_botSide;
    private javax.swing.JPanel home_pnl_configsOpt;
    private javax.swing.JPanel home_pnl_homeOpt;
    private javax.swing.JPanel home_pnl_inside;
    private javax.swing.JPanel home_pnl_leftSide;
    private javax.swing.JPanel home_pnl_options;
    private javax.swing.JPanel home_pnl_titleLogo;
    private javax.swing.JPanel home_pnl_topSide;
    private javax.swing.JLabel icon_config;
    private javax.swing.JLabel icon_home;
    private javax.swing.JLabel icon_logo;
    private javax.swing.JLabel lbl_config;
    private javax.swing.JLabel lbl_desc;
    private javax.swing.JLabel lbl_dislikes;
    private javax.swing.JLabel lbl_home;
    private javax.swing.JLabel lbl_likes;
    private javax.swing.JLabel lbl_musicArtist;
    private javax.swing.JLabel lbl_musicDesc;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JList<String> list_artists;
    private javax.swing.JPanel pnl_registerArtist;
    private javax.swing.JPanel pnl_registerMusic;
    private javax.swing.JPanel pnl_registers;
    private javax.swing.JScrollPane scroll_desc;
    private javax.swing.JScrollPane scroll_musicArtists;
    private javax.swing.JScrollPane scroll_musicDesc;
    private javax.swing.JFormattedTextField txt_birthDate;
    private javax.swing.JTextArea txt_description;
    private javax.swing.JFormattedTextField txt_dislikes;
    private javax.swing.JTextField txt_duration;
    private javax.swing.JTextField txt_genre;
    private javax.swing.JFormattedTextField txt_likes;
    private javax.swing.JTextArea txt_musicDescription;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_title;
    // End of variables declaration//GEN-END:variables
}
